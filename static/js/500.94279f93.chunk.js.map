{"version":3,"file":"static/js/500.94279f93.chunk.js","mappings":"qNAGaA,EAAU,SAAAC,GACrB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,0BACGF,EAAMG,KADT,KACiBH,EAAMI,QACrB,mBACEC,UAAU,gBACVC,QAAS,kBATaC,EASaP,EAAMO,QAR7CN,GAASO,EAAAA,EAAAA,IAAcD,IADG,IAAAA,CASb,EAFX,sBAQL,ECpBYE,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAwB,SAAAH,GACnC,IAAMC,EAAWF,EAAeC,GAC1BI,EAJoB,SAAAJ,GAAK,OAAIA,EAAMI,MAAV,CAIhBC,CAAaL,GAE5B,OAAOC,EAASG,QAAO,SAAAE,GAAO,OAC5BA,EAAQb,KAAKc,cAAcC,SAASJ,EAAOG,cADf,GAG/B,E,UCLYE,EAAiB,WAC5B,IAAMlB,GAAWC,EAAAA,EAAAA,MACXS,GAAWS,EAAAA,EAAAA,IAAYX,GAY7B,OACE,kBAAMJ,UAAU,OAAOgB,SAXJ,SAAAC,GACnBA,EAAEC,iBACF,IAAMpB,EAAOmB,EAAEE,cAAcrB,KAAKsB,MAC5BrB,EAASkB,EAAEE,cAAcpB,OAAOqB,MAClCd,EAASe,MAAK,SAAAV,GAAO,OAAIA,EAAQb,OAASA,CAArB,IACvBwB,MAAM,GAAD,OAAIxB,EAAJ,4BACFF,GAAS2B,EAAAA,EAAAA,IAAW,CAAEzB,KAAAA,EAAMC,OAAAA,KACjCkB,EAAEE,cAAcK,OACjB,EAGC,WACE,kCACA,kBAAOC,KAAK,OAAO3B,KAAK,UACxB,oCACA,kBAAO2B,KAAK,MAAM3B,KAAK,YACvB,mBAAQ2B,KAAK,SAASzB,UAAU,SAAhC,2BAKL,E,UC1BY0B,EAAS,WACpB,IAAM9B,GAAWC,EAAAA,EAAAA,MAOjB,OACE,iCACE,kDACA,kBAAO4B,KAAK,OAAOE,SARI,SAAAV,GACzB,IAAMR,EAASQ,EAAEE,cAAcC,MAC/BxB,GAASgC,EAAAA,EAAAA,GAAUnB,GACpB,MAQF,ECTYoB,EAAc,WACzB,IAAMjC,GAAWC,EAAAA,EAAAA,MACXS,GAAWS,EAAAA,EAAAA,IAAYP,GAM7B,OAJAsB,EAAAA,EAAAA,YAAU,WACRlC,GAASmC,EAAAA,EAAAA,MACV,GAAE,CAACnC,KAGF,iBAAKI,UAAU,YAAf,WACE,SAACc,EAAD,KACA,sCACA,SAACY,EAAD,KACA,wBACGpB,EACGA,EAAS0B,KAAI,SAAArB,GAAO,OAClB,SAACjB,EAAD,CAEEI,KAAMa,EAAQb,KACdC,OAAQY,EAAQZ,OAChBG,GAAIS,EAAQT,IAHPS,EAAQT,GAFG,IAQpB,SAIX,E,SCfD,EAhBa,WACX,IAAM+B,GAAalB,EAAAA,EAAAA,IAAYmB,EAAAA,IAE/B,OACE,iBAAMlC,UAAU,OAAhB,SACGiC,GACC,SAACJ,EAAD,KAEA,eAAI7B,UAAU,cAAd,oEAMP,C","sources":["components/Contact.jsx","redux/contacts/selectors.jsx","components/AddContactForm.jsx","components/Filter.jsx","components/ContactList.jsx","pages/Home.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const Contact = props => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <li>\n      {props.name}: {props.number}\n      <button\n        className=\"delete-button\"\n        onClick={() => handleDeleteContact(props.id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n","export const selectFilter = state => state.filter;\nexport const selectContacts = state => state.contacts.items;\nexport const selectVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const AddContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = e.currentTarget.name.value;\n    const number = e.currentTarget.number.value;\n    if (contacts.find(contact => contact.name === name))\n      alert(`${name} is already in contacts`);\n    else dispatch(addContact({ name, number }));\n    e.currentTarget.reset();\n  };\n\n  return (\n    <form className=\"form\" onSubmit={handleSubmit}>\n      <h3>Name</h3>\n      <input type=\"text\" name=\"name\" />\n      <h3>Number</h3>\n      <input type=\"tel\" name=\"number\" />\n      <button type=\"submit\" className=\"button\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/slice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    const filter = e.currentTarget.value;\n    dispatch(setFilter(filter));\n  };\n\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <input type=\"text\" onChange={handleFilterChange} />\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Contact } from './Contact';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { AddContactForm } from './AddContactForm';\nimport { Filter } from './Filter';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      <AddContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ul>\n        {contacts\n          ? contacts.map(contact => (\n              <Contact\n                key={contact.id}\n                name={contact.name}\n                number={contact.number}\n                id={contact.id}\n              />\n            ))\n          : null}\n      </ul>\n    </div>\n  );\n};\n","import { ContactList } from 'components/ContactList';\nimport { useSelector } from 'react-redux';\nimport { selectLoggedIn } from 'redux/auth/selectors';\n\nconst Home = () => {\n  const isLoggedIn = useSelector(selectLoggedIn);\n\n  return (\n    <main className=\"main\">\n      {isLoggedIn ? (\n        <ContactList />\n      ) : (\n        <h1 className=\"home-header\">\n          Welcome to the Contact book! Please log in or sign up\n        </h1>\n      )}\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["Contact","props","dispatch","useDispatch","name","number","className","onClick","id","deleteContact","selectContacts","state","contacts","items","selectVisibleContacts","filter","selectFilter","contact","toLowerCase","includes","AddContactForm","useSelector","onSubmit","e","preventDefault","currentTarget","value","find","alert","addContact","reset","type","Filter","onChange","setFilter","ContactList","useEffect","fetchContacts","map","isLoggedIn","selectLoggedIn"],"sourceRoot":""}